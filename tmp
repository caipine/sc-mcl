
plot1 <- FeatureScatter(Object1, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(Object1, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2


Object1 <- subset(Object1, subset = nFeature_RNA > 200 & nFeature_RNA < 3500 & percent.mt < 15)
VlnPlot(Object1, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Object1 <- NormalizeData(Object1, normalization.method = "LogNormalize", scale.factor = 10000)
Object1 <- NormalizeData(Object1)
Object1 <- FindVariableFeatures(Object1, selection.method = "vst", nfeatures = 2000)

# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(Object1), 10)

# plot variable features with and without labels
plot1 <- VariableFeaturePlot(Object1)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2

all.genes <- rownames(Object1)
Object1 <- ScaleData(Object1, features = all.genes)
Object1 <- RunPCA(Object1, features = VariableFeatures(object = Object1))
print(Object1[["pca"]], dims = 1:5, nfeatures = 5)

VizDimLoadings(Object1, dims = 1:2, reduction = "pca")

Object1 <- FindNeighbors(Object1, dims = 1:10)
Object1 <- FindClusters(Object1, resolution = 0.5)
Object1 <- RunUMAP(Object1, dims = 1:10)
# note that you can set `label = TRUE` or use the LabelClusters function to help label
# individual clusters
DimPlot(Object1, reduction = "umap",label=T)
DimPlot(Object1, reduction = "umap", label=T,group.by= "species")

Object1 <- RunTSNE(Object1, dims = 1:10)
DimPlot(Object1, reduction = "tsne",label=T)
DimPlot(Object1, reduction = "tsne", label=T,group.by= "species")

FeaturePlot(Object1, features = c("CD79A"))
FeaturePlot(Object1, reduction = "tsne",features = c("CD79A"))
